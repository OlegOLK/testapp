{"ast":null,"code":"var _jsxFileName = \"C:\\\\Repository\\\\testapp\\\\src\\\\Application.js\";\nimport React from 'react';\nimport { UserSession, AppConfig } from 'blockstack';\nimport { configure, User } from 'radiks';\nimport { Board } from './compoentns/board';\nimport Menu from './compoentns/menu';\nimport { Grid } from '@material-ui/core';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { JGeneralInfo } from './compoentns/jumbotron/generalInfo';\nimport JCreateRule from './compoentns/jumbotron/createRule';\nimport { CreateConditionElement } from './compoentns/models/createCondition';\nimport { CreateActionElement } from './compoentns/models/createAction';\nconst userSession = new UserSession({\n  appConfig: new AppConfig(['store_write', 'publish_data'])\n});\nconfigure({\n  apiServer: 'http://localhost:1260',\n  userSession\n});\nconst styles = {\n  root: {\n    flexGrow: 1\n  }\n};\n\nfunction handleSignIn() {\n  userSession.redirectToSignIn();\n}\n\nfunction handleSignOut() {\n  userSession.signUserOut(window.location.origin);\n  window.location = window.location.origin;\n}\n\nfunction componentWillMount() {\n  if (userSession.isSignInPending()) {\n    userSession.handlePendingSignIn().then(userData => {\n      User.createWithCurrentUser().then(cred => {\n        console.log(userData);\n        window.location = window.location.origin;\n      });\n    });\n  }\n}\n\nconst Application = () => {\n  componentWillMount();\n  return React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: styles.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Menu, {\n    userSession: userSession,\n    handleSignOut: handleSignOut,\n    handleSignIn: handleSignIn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/\",\n    exact: true,\n    component: Board,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/create-rule/condition\",\n    component: CreateConditionElement,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/create-rule/action\",\n    component: CreateActionElement,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })))));\n};\n\nexport default Application; // export default class Application extends React.Component {\n//     handleSignIn() {\n//         userSession.redirectToSignIn();\n//     }\n//     handleSignOut() {\n//         userSession.signUserOut(window.location.origin);\n//         window.location = window.location.origin;\n//     }\n//     componentWillMount() {\n//         if (userSession.isSignInPending()) {\n//             userSession.handlePendingSignIn().then((userData) => {\n//                 User.createWithCurrentUser().then(cred => {\n//                     console.log(userData);\n//                     window.location = window.location.origin;\n//                 });\n//             });\n//         }\n//     }\n//     render() {\n//         return (\n//             <Router>\n//                 <div style={styles.root}>\n//                     <Grid container spacing={0}>\n//                         <Grid item xs={12}>\n//                             <Menu userSession={userSession} handleSignOut={this.handleSignOut} handleSignIn={this.handleSignIn} />\n//                         </Grid>\n//                         <Grid item xs={12}>\n//                             <Route path=\"/\" exact component={JGeneralInfo} />\n//                             <Route path=\"/create-rule/\" component={JCreateRule} />\n//                         </Grid>\n//                         <Grid item xs={12}>\n//                             <Route path=\"/\" exact component={Board} />\n//                             <Route path=\"/create-rule/condition\" component={CreateConditionElement} />\n//                             <Route path=\"/create-rule/action\" component={CreateActionElement} />\n//                         </Grid>\n//                     </Grid>\n//                 </div>\n//             </Router>\n//         );\n//     }\n// }","map":{"version":3,"sources":["C:\\Repository\\testapp\\src\\Application.js"],"names":["React","UserSession","AppConfig","configure","User","Board","Menu","Grid","BrowserRouter","Router","Route","JGeneralInfo","JCreateRule","CreateConditionElement","CreateActionElement","userSession","appConfig","apiServer","styles","root","flexGrow","handleSignIn","redirectToSignIn","handleSignOut","signUserOut","window","location","origin","componentWillMount","isSignInPending","handlePendingSignIn","then","userData","createWithCurrentUser","cred","console","log","Application"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { UserSession, AppConfig } from 'blockstack';\r\nimport { configure, User } from 'radiks';\r\nimport { Board } from './compoentns/board';\r\nimport Menu from './compoentns/menu';\r\nimport { Grid } from '@material-ui/core';\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport { JGeneralInfo } from './compoentns/jumbotron/generalInfo';\r\nimport JCreateRule from './compoentns/jumbotron/createRule';\r\nimport { CreateConditionElement } from './compoentns/models/createCondition';\r\nimport { CreateActionElement } from './compoentns/models/createAction';\r\n\r\nconst userSession = new UserSession({\r\n    appConfig: new AppConfig(['store_write', 'publish_data'])\r\n});\r\n\r\nconfigure({\r\n    apiServer: 'http://localhost:1260',\r\n    userSession\r\n});\r\n\r\nconst styles = {\r\n    root: {\r\n        flexGrow: 1\r\n    }\r\n};\r\n\r\nfunction handleSignIn() {\r\n    userSession.redirectToSignIn();\r\n}\r\n\r\nfunction handleSignOut() {\r\n    userSession.signUserOut(window.location.origin);\r\n    window.location = window.location.origin;\r\n}\r\n\r\nfunction componentWillMount() {\r\n    if (userSession.isSignInPending()) {\r\n        userSession.handlePendingSignIn().then((userData) => {\r\n            User.createWithCurrentUser().then(cred => {\r\n                console.log(userData);\r\n                window.location = window.location.origin;\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\nconst Application= () => {\r\n    \r\n    componentWillMount();\r\n    \r\n    return (\r\n        <Router>\r\n            <div style={styles.root}>\r\n                <Grid container spacing={0}>\r\n                    <Grid item xs={12}>\r\n                        <Menu userSession={userSession} handleSignOut={handleSignOut} handleSignIn={handleSignIn} />\r\n                    </Grid>\r\n\r\n                    {/* <Grid item xs={12}>\r\n                        <Route path=\"/\" exact component={JGeneralInfo} />\r\n                        <Route path=\"/create-rule/\" component={JCreateRule} />\r\n                    </Grid> */}\r\n\r\n                    <Grid item xs={12}>\r\n                        <Route path=\"/\" exact component={Board} />\r\n                        <Route path=\"/create-rule/condition\" component={CreateConditionElement} />\r\n                        <Route path=\"/create-rule/action\" component={CreateActionElement} />\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </Router>\r\n\r\n    );\r\n}\r\n\r\nexport default Application;\r\n\r\n// export default class Application extends React.Component {\r\n\r\n//     handleSignIn() {\r\n//         userSession.redirectToSignIn();\r\n//     }\r\n\r\n//     handleSignOut() {\r\n//         userSession.signUserOut(window.location.origin);\r\n//         window.location = window.location.origin;\r\n//     }\r\n\r\n//     componentWillMount() {\r\n//         if (userSession.isSignInPending()) {\r\n//             userSession.handlePendingSignIn().then((userData) => {\r\n//                 User.createWithCurrentUser().then(cred => {\r\n//                     console.log(userData);\r\n//                     window.location = window.location.origin;\r\n//                 });\r\n//             });\r\n//         }\r\n//     }\r\n\r\n//     render() {\r\n//         return (\r\n//             <Router>\r\n//                 <div style={styles.root}>\r\n//                     <Grid container spacing={0}>\r\n//                         <Grid item xs={12}>\r\n//                             <Menu userSession={userSession} handleSignOut={this.handleSignOut} handleSignIn={this.handleSignIn} />\r\n//                         </Grid>\r\n\r\n//                         <Grid item xs={12}>\r\n//                             <Route path=\"/\" exact component={JGeneralInfo} />\r\n//                             <Route path=\"/create-rule/\" component={JCreateRule} />\r\n//                         </Grid>\r\n\r\n//                         <Grid item xs={12}>\r\n//                             <Route path=\"/\" exact component={Board} />\r\n//                             <Route path=\"/create-rule/condition\" component={CreateConditionElement} />\r\n//                             <Route path=\"/create-rule/action\" component={CreateActionElement} />\r\n//                         </Grid>\r\n//                     </Grid>\r\n\r\n\r\n\r\n//                 </div>\r\n//             </Router>\r\n\r\n//         );\r\n//     }\r\n// }"]},"metadata":{},"sourceType":"module"}