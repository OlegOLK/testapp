{"ast":null,"code":"var _jsxFileName = \"C:\\\\Repository\\\\testapp\\\\src\\\\compoentns\\\\models\\\\createCondition.js\";\nimport React from 'reactn';\nimport TextField from '@material-ui/core/TextField';\nimport { Grid, Divider } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport uuid from 'uuid/v4';\n\nclass RenderDateTimeCondition extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = () => event => {\n      this.setState({\n        activated: event.target.checked\n      });\n      this.props.onChange(this.props.index, event.target.checked);\n\n      if (event.target.checked) {\n        this.updateGlobalState();\n      }\n    };\n\n    this.onChangeDate = date => {\n      console.log(date, 'onChangeDate');\n      const stateCondition = this.state.condition;\n      stateCondition.value = date;\n      this.setState({\n        condition: stateCondition\n      });\n    };\n\n    this.state = {\n      activated: false,\n      condition: {\n        type: \"date\",\n        value: new Date(),\n        id: uuid()\n      }\n    };\n  }\n\n  updateGlobalState() {\n    const rule = this.global.rule;\n    const componentConditionIndex = rule.conditions.indexOf(x => x.id == this.state.condition.id);\n\n    if (componentConditionIndex != -1) {\n      rule.conditions[componentConditionIndex] = this.state.condition;\n    } else {\n      rule.conditions.push(this.state.condition);\n    }\n\n    this.setGlobal({\n      rule: rule\n    });\n    console.log('destroy', this.global);\n  }\n\n  getDefaultDateValue() {\n    const date = new Date();\n    return date.getFullYear() + \"-\" + (date.getMonth() + 1 < 10 ? \"0\" + (date.getMonth() + 1) : date.getMonth() + 1) + \"-\" + date.getDate();\n  }\n\n  render() {\n    return React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      lg: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: RenderDateTimeCondition.styles.card,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(CardMedia, {\n      style: RenderDateTimeCondition.styles.media,\n      image: \"http://static1.squarespace.com/static/599327e56b8f5b29a7f66773/t/59e12c9629f187419b21ed1e/1507929239914/CREATE_LOGO.png?format=1500w\",\n      title: \"Create rule img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      gutterBottom: true,\n      variant: \"h5\",\n      component: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      style: RenderDateTimeCondition.styles.container,\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"date\",\n      label: \"Date condition\",\n      type: \"date\",\n      value: this.getDefaultDateValue(),\n      onChange: this.onChangeDate,\n      style: RenderDateTimeCondition.styles.textField,\n      InputLabelProps: {\n        shrink: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }))), React.createElement(Typography, {\n      component: \"p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Create rule description\")), React.createElement(CardActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"small\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Info\"), React.createElement(FormControlLabel, {\n      control: React.createElement(Switch, {\n        checked: this.state.activated,\n        onChange: this.handleChange(),\n        value: \"activated\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }),\n      label: \"Active\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nRenderDateTimeCondition.styles = {\n  card: {\n    maxWidth: 250\n  },\n  media: {\n    height: 140\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  div: {\n    marginRight: '10em',\n    marginLeft: '10em'\n  },\n  textField: {\n    width: 200\n  }\n};\nexport class CreateConditionElement extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasActiveCondition: Array(7).fill(false),\n      activated: false\n    };\n  }\n\n  handleActivateCondition(index, value) {\n    this.state.hasActiveCondition[index] = value;\n    this.forceUpdate();\n    const activated = this.state.hasActiveCondition.find(x => x === true);\n    let ruleCreation = this.global.ruleCreation;\n\n    if (activated) {\n      ruleCreation.isAnyActiveCondition = true;\n      this.setState({\n        activated: true\n      });\n    } else {\n      ruleCreation.isAnyActiveCondition = false;\n      this.setState({\n        activated: false\n      });\n    }\n\n    this.setGlobal({\n      ruleCreation: ruleCreation\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, this.state.activated ? React.createElement(Button, {\n      variant: \"contained\",\n      href: \"/create-rule/action\",\n      size: \"medium\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"Next\") : React.createElement(Button, {\n      variant: \"contained\",\n      size: \"medium\",\n      disabled: true,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"Next\"), React.createElement(Divider, {\n      variant: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      container: true,\n      spacing: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(RenderDateTimeCondition, {\n      index: 0,\n      onChange: this.handleActivateCondition.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }), React.createElement(RenderDateTimeCondition, {\n      index: 1,\n      onChange: this.handleActivateCondition.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }), React.createElement(RenderDateTimeCondition, {\n      index: 2,\n      onChange: this.handleActivateCondition.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }), React.createElement(RenderDateTimeCondition, {\n      index: 3,\n      onChange: this.handleActivateCondition.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }), React.createElement(RenderDateTimeCondition, {\n      index: 4,\n      onChange: this.handleActivateCondition.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }), React.createElement(RenderDateTimeCondition, {\n      index: 5,\n      onChange: this.handleActivateCondition.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }), React.createElement(RenderDateTimeCondition, {\n      index: 6,\n      onChange: this.handleActivateCondition.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }), React.createElement(RenderDateTimeCondition, {\n      index: 7,\n      onChange: this.handleActivateCondition.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:\\Repository\\testapp\\src\\compoentns\\models\\createCondition.js"],"names":["React","TextField","Grid","Divider","Card","CardActions","CardContent","CardMedia","Button","Typography","Switch","FormControlLabel","uuid","RenderDateTimeCondition","Component","constructor","props","handleChange","event","setState","activated","target","checked","onChange","index","updateGlobalState","onChangeDate","date","console","log","stateCondition","state","condition","value","type","Date","id","rule","global","componentConditionIndex","conditions","indexOf","x","push","setGlobal","getDefaultDateValue","getFullYear","getMonth","getDate","render","styles","card","media","container","textField","shrink","maxWidth","height","display","flexWrap","div","marginRight","marginLeft","width","CreateConditionElement","hasActiveCondition","Array","fill","handleActivateCondition","forceUpdate","find","ruleCreation","isAnyActiveCondition","bind"],"mappings":"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","sourcesContent":["import React from 'reactn';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Grid, Divider } from '@material-ui/core';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport uuid from 'uuid/v4'\r\n\r\n\r\nclass RenderDateTimeCondition extends React.Component {\r\n\r\n    static styles = {\r\n        card: {\r\n            maxWidth: 250,\r\n        },\r\n        media: {\r\n            height: 140,\r\n        },\r\n        container: {\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n        },\r\n        div: {\r\n            marginRight: '10em',\r\n            marginLeft: '10em'\r\n        },\r\n        textField: {\r\n            width: 200,\r\n        },\r\n    };\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state ={\r\n            activated : false,\r\n            condition: {\r\n                type: \"date\",\r\n                value: new Date(),\r\n                id: uuid(),\r\n            }\r\n        }\r\n    }\r\n\r\n    updateGlobalState(){\r\n            const rule = this.global.rule;\r\n            const componentConditionIndex = rule.conditions.indexOf(x=> x.id == this.state.condition.id);\r\n            if(componentConditionIndex != -1){\r\n                rule.conditions[componentConditionIndex] = this.state.condition\r\n            }\r\n            else{\r\n                rule.conditions.push(this.state.condition);\r\n            }\r\n\r\n            this.setGlobal({\r\n                rule: rule\r\n            });\r\n\r\n\r\n            console.log('destroy', this.global);\r\n    }\r\n\r\n    handleChange = () => event => {\r\n        this.setState({ activated: event.target.checked });   \r\n        this.props.onChange(this.props.index, event.target.checked);\r\n        if(event.target.checked){\r\n            this.updateGlobalState();\r\n        }\r\n    };\r\n\r\n    getDefaultDateValue() {\r\n        const date = new Date();\r\n        return date.getFullYear() + \"-\" + (date.getMonth() + 1 < 10 ? \"0\" + (date.getMonth() + 1) : date.getMonth() + 1) + \"-\" + date.getDate();\r\n    }\r\n\r\n    onChangeDate = date => {\r\n        console.log(date, 'onChangeDate');\r\n        const stateCondition = this.state.condition;\r\n        stateCondition.value = date;\r\n        this.setState({\r\n            condition: stateCondition\r\n        });\r\n    } \r\n\r\n    render() {\r\n        return (\r\n            <Grid item xs={12} sm={6} lg={2}>\r\n                <Card style={RenderDateTimeCondition.styles.card}>\r\n                    <CardMedia\r\n                        style={RenderDateTimeCondition.styles.media}\r\n                        image='http://static1.squarespace.com/static/599327e56b8f5b29a7f66773/t/59e12c9629f187419b21ed1e/1507929239914/CREATE_LOGO.png?format=1500w'\r\n                        title=\"Create rule img\"\r\n                    />\r\n                    <CardContent>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                            <form style={RenderDateTimeCondition.styles.container} noValidate>\r\n                                <TextField\r\n                                    id=\"date\"\r\n                                    label=\"Date condition\"\r\n                                    type=\"date\"\r\n                                    value={this.getDefaultDateValue()}\r\n                                    onChange={this.onChangeDate}\r\n                                    style={RenderDateTimeCondition.styles.textField}\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                />\r\n                            </form>\r\n                        </Typography>\r\n                        <Typography component=\"p\">\r\n                            Create rule description\r\n                    </Typography>\r\n                    </CardContent>\r\n                    <CardActions>\r\n                        <Button size=\"small\" color=\"primary\">\r\n                            Info\r\n                    </Button>\r\n                        <FormControlLabel control={\r\n                            <Switch checked={this.state.activated}\r\n                                onChange={this.handleChange()}\r\n                                value=\"activated\" />\r\n                        } label=\"Active\" />\r\n                    </CardActions>\r\n                </Card>\r\n            </Grid>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport class CreateConditionElement extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            hasActiveCondition: Array(7).fill(false),\r\n            activated: false\r\n        }\r\n    }\r\n\r\n\r\n    handleActivateCondition(index, value) {\r\n        this.state.hasActiveCondition[index] = value;\r\n        this.forceUpdate();\r\n        const activated = this.state.hasActiveCondition.find(x => x === true);\r\n        let ruleCreation = this.global.ruleCreation;\r\n\r\n        if (activated) {\r\n            ruleCreation.isAnyActiveCondition = true;\r\n            this.setState({\r\n                activated: true\r\n            });\r\n        } else {\r\n            ruleCreation.isAnyActiveCondition = false;\r\n            this.setState({\r\n                activated: false\r\n            });\r\n        }\r\n\r\n        this.setGlobal({\r\n            ruleCreation: ruleCreation\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                {\r\n                    this.state.activated ? (\r\n                        <Button variant=\"contained\" href='/create-rule/action' size=\"medium\" color=\"primary\">\r\n                            Next\r\n                        </Button>\r\n                    )\r\n                        :\r\n                        (<Button variant=\"contained\" size=\"medium\" disabled color=\"primary\">\r\n                            Next\r\n                        </Button>)\r\n                }\r\n                <Divider variant=\"middle\" />\r\n                <Grid container spacing={8}>\r\n                    <RenderDateTimeCondition index={0} onChange={this.handleActivateCondition.bind(this)} />\r\n                    <RenderDateTimeCondition index={1} onChange={this.handleActivateCondition.bind(this)} />\r\n                    <RenderDateTimeCondition index={2} onChange={this.handleActivateCondition.bind(this)} />\r\n                    <RenderDateTimeCondition index={3} onChange={this.handleActivateCondition.bind(this)} />\r\n                    <RenderDateTimeCondition index={4} onChange={this.handleActivateCondition.bind(this)} />\r\n                    <RenderDateTimeCondition index={5} onChange={this.handleActivateCondition.bind(this)} />\r\n                    <RenderDateTimeCondition index={6} onChange={this.handleActivateCondition.bind(this)} />\r\n                    <RenderDateTimeCondition index={7} onChange={this.handleActivateCondition.bind(this)} />\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}