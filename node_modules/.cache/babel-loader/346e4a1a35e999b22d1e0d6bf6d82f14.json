{"ast":null,"code":"var _jsxFileName = \"C:\\\\Repository\\\\testapp\\\\src\\\\compoentns\\\\models\\\\createAction.js\";\nimport React from 'reactn';\nimport { Grid, Divider } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Chip from '@material-ui/core/Chip';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\n\nfunction Transition(props) {\n  return React.createElement(Slide, Object.assign({\n    direction: \"up\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }));\n}\n\nclass RenderSendMailAction extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      textDialogOpen: false,\n      recepientDialogOpen: false,\n      activated: false,\n      action: {}\n    };\n\n    this.handleTextClickOpen = () => {\n      this.setState({\n        textDialogOpen: true\n      });\n    };\n\n    this.handleTextClose = () => {\n      this.setState({\n        textDialogOpen: false\n      });\n    };\n\n    this.handleRecepientClickOpen = () => {\n      this.setState({\n        recepientDialogOpen: true\n      });\n    };\n\n    this.handleRecepientClose = () => {\n      this.setState({\n        recepientDialogOpen: false\n      });\n    };\n\n    this.handleRecepientSave = () => {\n      this.setState({\n        recepientDialogOpen: false\n      });\n      console.log(this.state);\n    };\n\n    this.handleChange = name => event => {\n      console.log(this.global);\n      this.setState({\n        [name]: event.target.checked\n      });\n      this.props.onChange(this.props.index, event.target.checked);\n    };\n\n    this.handleRecipientsChange = recipients => event => {\n      const old = this.state.action;\n      old.recipients = event.target.value;\n      this.setState({\n        action: old\n      });\n    };\n\n    this.handleTextChange = () => event => {\n      const old = this.state.action;\n      old.text = event.target.value;\n      this.setState({\n        action: old\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      lg: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: RenderSendMailAction.styles.card,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(CardMedia, {\n      style: RenderSendMailAction.styles.media,\n      image: \"http://static1.squarespace.com/static/599327e56b8f5b29a7f66773/t/59e12c9629f187419b21ed1e/1507929239914/CREATE_LOGO.png?format=1500w\",\n      title: \"Create rule img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: this.handleRecepientClickOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Add mail recipients\"), React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: this.handleTextClickOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Add mail text\"), React.createElement(Typography, {\n      component: \"p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Create rule description\")), React.createElement(CardActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"small\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Info\"), React.createElement(FormControlLabel, {\n      control: React.createElement(Switch, {\n        checked: this.state.activated,\n        onChange: this.handleChange('activated'),\n        value: \"activated\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }),\n      label: \"Active\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }))), React.createElement(Dialog, {\n      open: this.state.recepientDialogOpen,\n      onClose: this.handleRecepientClose,\n      \"aria-labelledby\": \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Recipients\"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(DialogContentText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Enter recipients emails for notification about rule conditions trigger.\"), React.createElement(TextField, {\n      autoFocus: true,\n      margin: \"normal\",\n      id: \"name\",\n      label: \"Recipients email Address, divide by ;\",\n      fullWidth: true,\n      value: this.state.action.recipients,\n      onChange: this.handleRecipientsChange('recipients'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    })), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleRecepientClose,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      onClick: this.handleRecepientSave,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Save\"))), React.createElement(Dialog, {\n      open: this.state.textDialogOpen,\n      fullScreen: true,\n      TransitionComponent: Transition,\n      onClose: this.handleTextClose,\n      \"aria-labelledby\": \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Mail text\"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(DialogContentText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"Enter email text\"), React.createElement(TextField, {\n      autoFocus: true,\n      fullWidth: true,\n      margin: \"normal\",\n      multiline: true,\n      rowsMax: \"4\",\n      id: \"text\",\n      label: \"Email text\",\n      value: this.state.action.text,\n      onChange: this.handleTextChange(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    })), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleTextClose,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      onClick: this.handleTextClose,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"Save\"))));\n  }\n\n}\n\nRenderSendMailAction.styles = {\n  card: {\n    maxWidth: 250\n  },\n  media: {\n    height: 140\n  },\n  textField: {\n    height: 'auto'\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  div: {\n    marginRight: '10em',\n    marginLeft: '10em'\n  },\n  textField: {\n    width: 200\n  }\n};\nexport class CreateActionElement extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasActiveCondition: Array(7).fill(false),\n      activated: false\n    };\n  }\n\n  handleActivateCondition(index, value) {\n    this.state.hasActiveCondition[index] = value;\n    this.forceUpdate();\n    const activated = this.state.hasActiveCondition.find(x => x === true);\n    let ruleCreation = this.global.ruleCreation;\n\n    if (activated) {\n      ruleCreation.isAnyActiveCondition = true;\n      this.setState({\n        activated: true\n      });\n    } else {\n      ruleCreation.isAnyActiveCondition = false;\n      this.setState({\n        activated: false\n      });\n    }\n\n    this.setGlobal({\n      ruleCreation: ruleCreation\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, this.state.activated ? React.createElement(Button, {\n      variant: \"contained\",\n      href: \"/create-rule/action\",\n      size: \"medium\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, \"Next\") : React.createElement(Button, {\n      variant: \"contained\",\n      size: \"medium\",\n      disabled: true,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, \"Next\"), React.createElement(Divider, {\n      variant: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      container: true,\n      spacing: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, React.createElement(RenderSendMailAction, {\n      index: 0,\n      onChange: this.handleActivateCondition.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }), React.createElement(RenderSendMailAction, {\n      index: 1,\n      onChange: this.handleActivateCondition.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }), React.createElement(RenderSendMailAction, {\n      index: 2,\n      onChange: this.handleActivateCondition.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }), React.createElement(RenderSendMailAction, {\n      index: 3,\n      onChange: this.handleActivateCondition.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }), React.createElement(RenderSendMailAction, {\n      index: 4,\n      onChange: this.handleActivateCondition.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }), React.createElement(RenderSendMailAction, {\n      index: 5,\n      onChange: this.handleActivateCondition.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }), React.createElement(RenderSendMailAction, {\n      index: 6,\n      onChange: this.handleActivateCondition.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }), React.createElement(RenderSendMailAction, {\n      index: 7,\n      onChange: this.handleActivateCondition.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:\\Repository\\testapp\\src\\compoentns\\models\\createAction.js"],"names":["React","Grid","Divider","Card","CardActions","CardContent","CardMedia","Button","Typography","Switch","FormControlLabel","Chip","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Slide","Transition","props","RenderSendMailAction","Component","state","textDialogOpen","recepientDialogOpen","activated","action","handleTextClickOpen","setState","handleTextClose","handleRecepientClickOpen","handleRecepientClose","handleRecepientSave","console","log","handleChange","name","event","global","target","checked","onChange","index","handleRecipientsChange","recipients","old","value","handleTextChange","text","render","styles","card","media","maxWidth","height","textField","container","display","flexWrap","div","marginRight","marginLeft","width","CreateActionElement","constructor","hasActiveCondition","Array","fill","handleActivateCondition","forceUpdate","find","x","ruleCreation","isAnyActiveCondition","setGlobal","bind"],"mappings":"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","sourcesContent":["import React from 'reactn';\r\nimport { Grid, Divider } from '@material-ui/core';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nfunction Transition(props) {\r\n    return <Slide direction=\"up\" {...props} />;\r\n  }\r\n\r\n\r\nclass RenderSendMailAction extends React.Component {\r\n    static styles = {\r\n        card: {\r\n            maxWidth: 250,\r\n        },\r\n        media: {\r\n            height: 140,\r\n        },\r\n        textField:{\r\n            height: 'auto'\r\n        },\r\n        container: {\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n        },\r\n        div: {\r\n            marginRight: '10em',\r\n            marginLeft: '10em'\r\n        },\r\n        textField: {\r\n            width: 200,\r\n        },\r\n    };\r\n\r\n    state = {\r\n        textDialogOpen: false,\r\n        recepientDialogOpen: false,\r\n        activated: false,\r\n        action: {}\r\n      };\r\n    \r\n      handleTextClickOpen = () => {\r\n        this.setState({ textDialogOpen: true });\r\n      };\r\n    \r\n      handleTextClose = () => {\r\n        this.setState({ textDialogOpen: false });\r\n      };\r\n\r\n      handleRecepientClickOpen = () => {\r\n        this.setState({ recepientDialogOpen: true });\r\n      };\r\n    \r\n      handleRecepientClose = () => {\r\n        this.setState({ recepientDialogOpen: false });\r\n      };\r\n    \r\n      handleRecepientSave = () => {\r\n        this.setState({ \r\n            recepientDialogOpen: false,\r\n        });\r\n        console.log(this.state)\r\n      };\r\n\r\n      handleChange = name => event => {\r\n        console.log(this.global);\r\n        this.setState({ [name]: event.target.checked });\r\n        this.props.onChange(this.props.index, event.target.checked)\r\n      };\r\n\r\n    handleRecipientsChange = recipients => event => {\r\n        const old = this.state.action;\r\n        old.recipients = event.target.value;\r\n        this.setState({ action: old });\r\n    };\r\n\r\n    handleTextChange = () => event => {\r\n        const old = this.state.action;\r\n        old.text = event.target.value;\r\n        this.setState({ action: old });\r\n    };\r\n   \r\n    render() {\r\n        return (\r\n            <Grid item xs={12} sm={6} lg={2}>\r\n                <Card style={RenderSendMailAction.styles.card}>\r\n                    <CardMedia\r\n                        style={RenderSendMailAction.styles.media}\r\n                        image='http://static1.squarespace.com/static/599327e56b8f5b29a7f66773/t/59e12c9629f187419b21ed1e/1507929239914/CREATE_LOGO.png?format=1500w'\r\n                        title=\"Create rule img\"\r\n                    />\r\n                    <CardContent>\r\n                        <Button variant=\"outlined\" color=\"primary\" onClick={this.handleRecepientClickOpen}>\r\n                            Add mail recipients\r\n                        </Button>\r\n\r\n                        <Button variant=\"outlined\" color=\"primary\" onClick={this.handleTextClickOpen}>\r\n                            Add mail text\r\n                        </Button>\r\n\r\n\r\n                        <Typography component=\"p\">\r\n                            Create rule description\r\n                        </Typography>\r\n                    </CardContent>\r\n                    \r\n                    <CardActions>\r\n                        <Button size=\"small\" color=\"primary\">\r\n                            Info\r\n                        </Button>\r\n                        <FormControlLabel control={\r\n                            <Switch checked={this.state.activated}\r\n                                onChange={this.handleChange('activated')}\r\n                                value=\"activated\" />\r\n                        } label=\"Active\" />\r\n                    </CardActions>\r\n                </Card>\r\n\r\n            <Dialog\r\n              open={this.state.recepientDialogOpen}\r\n              onClose={this.handleRecepientClose}\r\n              aria-labelledby=\"form-dialog-title\"\r\n            >\r\n              <DialogTitle id=\"form-dialog-title\">Recipients</DialogTitle>\r\n              <DialogContent>\r\n                <DialogContentText>\r\n                  Enter recipients emails for notification about rule conditions trigger.\r\n                </DialogContentText>\r\n                <TextField\r\n                  autoFocus\r\n                  margin=\"normal\"\r\n                  id=\"name\"\r\n                  label=\"Recipients email Address, divide by ;\"\r\n                  fullWidth\r\n                  value={this.state.action.recipients }\r\n                  onChange={this.handleRecipientsChange('recipients')}\r\n                />\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button onClick={this.handleRecepientClose} color=\"primary\">\r\n                  Cancel\r\n                </Button>\r\n                <Button onClick={this.handleRecepientSave} color=\"primary\">\r\n                  Save\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n              open={this.state.textDialogOpen}\r\n              fullScreen\r\n              TransitionComponent={Transition}\r\n              onClose={this.handleTextClose}\r\n              aria-labelledby=\"form-dialog-title\"\r\n            >\r\n              <DialogTitle id=\"form-dialog-title\">Mail text</DialogTitle>\r\n              <DialogContent>\r\n                <DialogContentText>\r\n                  Enter email text\r\n                </DialogContentText>\r\n                <TextField\r\n                  autoFocus\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  multiline\r\n                  rowsMax=\"4\"\r\n                  id=\"text\"\r\n                  label=\"Email text\"\r\n                  value={this.state.action.text}\r\n                  onChange={this.handleTextChange()}\r\n                />\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button onClick={this.handleTextClose} color=\"primary\">\r\n                  Cancel\r\n                </Button>\r\n                <Button onClick={this.handleTextClose} color=\"primary\">\r\n                  Save\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n\r\n           \r\n            </Grid>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport class CreateActionElement extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            hasActiveCondition: Array(7).fill(false),\r\n            activated: false\r\n        }\r\n    }\r\n\r\n\r\n    handleActivateCondition(index, value) {\r\n        this.state.hasActiveCondition[index] = value;\r\n        this.forceUpdate();\r\n        const activated = this.state.hasActiveCondition.find(x => x === true);       \r\n        let ruleCreation  = this.global.ruleCreation;    \r\n\r\n        if(activated){\r\n            ruleCreation.isAnyActiveCondition =  true;\r\n            this.setState({\r\n                activated: true\r\n            });\r\n        }else{\r\n            ruleCreation.isAnyActiveCondition =  false;\r\n            this.setState({\r\n                activated: false\r\n            });\r\n        }\r\n\r\n        this.setGlobal({\r\n            ruleCreation: ruleCreation\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                {\r\n                    this.state.activated ? (\r\n                        <Button variant=\"contained\"  href='/create-rule/action' size=\"medium\" color=\"primary\">\r\n                            Next\r\n                        </Button>\r\n                    ) \r\n                    :\r\n                     (<Button variant=\"contained\" size=\"medium\" disabled color=\"primary\">\r\n                            Next\r\n                        </Button>)\r\n                }\r\n               <Divider variant=\"middle\" />\r\n                <Grid container spacing={8}>\r\n                    <RenderSendMailAction index={0} onChange={this.handleActivateCondition.bind(this)} />\r\n                    <RenderSendMailAction index={1} onChange={this.handleActivateCondition.bind(this)} />\r\n                    <RenderSendMailAction index={2} onChange={this.handleActivateCondition.bind(this)} />\r\n                    <RenderSendMailAction index={3} onChange={this.handleActivateCondition.bind(this)} />\r\n                    <RenderSendMailAction index={4} onChange={this.handleActivateCondition.bind(this)} />\r\n                    <RenderSendMailAction index={5} onChange={this.handleActivateCondition.bind(this)} />\r\n                    <RenderSendMailAction index={6} onChange={this.handleActivateCondition.bind(this)} />\r\n                    <RenderSendMailAction index={7} onChange={this.handleActivateCondition.bind(this)} />\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}