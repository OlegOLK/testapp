{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nvar _exportNames = {\n  makeDIDFromAddress: true,\n  makeDIDFromPublicKey: true,\n  getDIDType: true,\n  getAddressFromDID: true,\n  getEntropy: true,\n  makeECPrivateKey: true,\n  publicKeyToAddress: true,\n  getPublicKeyFromPrivate: true,\n  nextYear: true,\n  nextMonth: true,\n  nextHour: true,\n  makeUUID4: true,\n  updateQueryStringParameter: true,\n  isLaterVersion: true,\n  isSameOriginAbsoluteUrl: true,\n  hexStringToECPair: true,\n  ecPairToHexString: true,\n  ecPairToAddress: true,\n  transactions: true,\n  safety: true,\n  TransactionSigner: true,\n  PubkeyHashSigner: true,\n  addUTXOsToFund: true,\n  estimateTXBytes: true,\n  BlockstackWallet: true,\n  IdentityKeyPair: true,\n  network: true,\n  decodeToken: true,\n  config: true,\n  encryptMnemonic: true,\n  decryptMnemonic: true,\n  UserSession: true\n};\nexports.UserSession = exports.decryptMnemonic = exports.encryptMnemonic = exports.config = exports.decodeToken = exports.network = exports.IdentityKeyPair = exports.BlockstackWallet = exports.estimateTXBytes = exports.addUTXOsToFund = exports.PubkeyHashSigner = exports.TransactionSigner = exports.safety = exports.transactions = exports.ecPairToAddress = exports.ecPairToHexString = exports.hexStringToECPair = exports.isSameOriginAbsoluteUrl = exports.isLaterVersion = exports.updateQueryStringParameter = exports.makeUUID4 = exports.nextHour = exports.nextMonth = exports.nextYear = exports.getPublicKeyFromPrivate = exports.publicKeyToAddress = exports.makeECPrivateKey = exports.getEntropy = exports.getAddressFromDID = exports.getDIDType = exports.makeDIDFromPublicKey = exports.makeDIDFromAddress = void 0;\n\nvar _queryString = _interopRequireDefault(require(\"query-string\"));\n\nvar _auth = require(\"./auth\");\n\nObject.keys(_auth).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = _auth[key];\n});\n\nvar _profiles = require(\"./profiles\");\n\nObject.keys(_profiles).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = _profiles[key];\n});\n\nvar _storage = require(\"./storage\");\n\nObject.keys(_storage).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = _storage[key];\n});\n\nvar _dids = require(\"./dids\");\n\nexports.makeDIDFromAddress = _dids.makeDIDFromAddress;\nexports.makeDIDFromPublicKey = _dids.makeDIDFromPublicKey;\nexports.getDIDType = _dids.getDIDType;\nexports.getAddressFromDID = _dids.getAddressFromDID;\n\nvar _keys = require(\"./keys\");\n\nexports.getEntropy = _keys.getEntropy;\nexports.makeECPrivateKey = _keys.makeECPrivateKey;\nexports.publicKeyToAddress = _keys.publicKeyToAddress;\nexports.getPublicKeyFromPrivate = _keys.getPublicKeyFromPrivate;\n\nvar _utils = require(\"./utils\");\n\nexports.nextYear = _utils.nextYear;\nexports.nextMonth = _utils.nextMonth;\nexports.nextHour = _utils.nextHour;\nexports.makeUUID4 = _utils.makeUUID4;\nexports.updateQueryStringParameter = _utils.updateQueryStringParameter;\nexports.isLaterVersion = _utils.isLaterVersion;\nexports.isSameOriginAbsoluteUrl = _utils.isSameOriginAbsoluteUrl;\nexports.hexStringToECPair = _utils.hexStringToECPair;\nexports.ecPairToHexString = _utils.ecPairToHexString;\nexports.ecPairToAddress = _utils.ecPairToAddress;\n\nvar _operations = require(\"./operations\");\n\nexports.transactions = _operations.transactions;\nexports.safety = _operations.safety;\nexports.TransactionSigner = _operations.TransactionSigner;\nexports.PubkeyHashSigner = _operations.PubkeyHashSigner;\nexports.addUTXOsToFund = _operations.addUTXOsToFund;\nexports.estimateTXBytes = _operations.estimateTXBytes;\n\nvar _wallet = require(\"./wallet\");\n\nexports.BlockstackWallet = _wallet.BlockstackWallet;\nexports.IdentityKeyPair = _wallet.IdentityKeyPair;\n\nvar _network = require(\"./network\");\n\nexports.network = _network.network;\n\nvar _jsontokens = require(\"jsontokens\");\n\nexports.decodeToken = _jsontokens.decodeToken;\n\nvar _config = require(\"./config\");\n\nexports.config = _config.config;\n\nvar _encryption = require(\"./encryption\");\n\nexports.encryptMnemonic = _encryption.encryptMnemonic;\nexports.decryptMnemonic = _encryption.decryptMnemonic;\n\nvar _userSession = require(\"./auth/userSession\");\n\nexports.UserSession = _userSession.UserSession;\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n} // TODO: Putting in here so it executes ASAP. There is probably a better place to put this.\n// Note: This prototype is designed to work as a drop-in-replacement (non-breaking upgrade)\n// for apps using blockstack.js. That requires doing this hacky global & immediate detection. \n// A more proper approach would require developers to call an additional blockstack.js method \n// for invoking this detection method.\n\n\n(function protocolEchoReplyDetection() {\n  // Check that the `window` APIs exist\n  if (typeof window !== 'object' || !window.location || !window.localStorage) {\n    // Exit detection function - we are not running in a browser environment.\n    return;\n  } // Check if the location query string contains a protocol-echo reply.\n  // If so, this page was only re-opened to signal back the originating \n  // tab that the protocol handler is installed. \n\n\n  var queryDict = _queryString.default.parse(window.location.search);\n\n  if (queryDict.echoReply) {\n    // Use localStorage to notify originated tab that protocol handler is available and working.\n    var echoReplyKey = \"echo-reply-\".concat(queryDict.echoReply); // Set the echo-reply result in localStorage for the other window to see.\n\n    window.localStorage.setItem(echoReplyKey, 'success'); // Redirect back to the localhost auth url, as opposed to another protocol launch.\n    // This will re-use the same tab rather than creating another useless one.\n\n    window.setTimeout(function () {\n      window.location = decodeURIComponent(queryDict.authContinuation);\n    }, 10);\n  }\n})();","map":null,"metadata":{},"sourceType":"script"}