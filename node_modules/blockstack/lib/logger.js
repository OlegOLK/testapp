"use strict";

exports.__esModule = true;
exports.Logger = exports.levels = void 0;

var _config = require("./config");

const levels = ['debug', 'info', 'warn', 'error', 'none'];
exports.levels = levels;
const levelToInt = {};
const intToLevel = {};

for (let index = 0; index < levels.length; index++) {
  const level = levels[index];
  levelToInt[level] = index;
  intToLevel[index] = level;
}

class Logger {
  static error(message) {
    if (!this.shouldLog('error')) return;
    console.error(this.logMessage('error', message));
  }

  static warn(message) {
    if (!this.shouldLog('warn')) return;
    console.warn(this.logMessage('warn', message));
  }

  static info(message) {
    if (!this.shouldLog('info')) return;
    console.log(this.logMessage('info', message));
  }

  static debug(message) {
    if (!this.shouldLog('debug')) return;
    console.log(this.logMessage('debug', message));
  }

  static logMessage(level, message) {
    return `[${level.toUpperCase()}] ${message}`;
  }

  static shouldLog(level) {
    const currentLevel = levelToInt[_config.config.logLevel];
    return currentLevel <= levelToInt[level];
  }

}

exports.Logger = Logger;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9sb2dnZXIuanMiXSwibmFtZXMiOlsibGV2ZWxzIiwibGV2ZWxUb0ludCIsImludFRvTGV2ZWwiLCJpbmRleCIsImxlbmd0aCIsImxldmVsIiwiTG9nZ2VyIiwiZXJyb3IiLCJtZXNzYWdlIiwic2hvdWxkTG9nIiwiY29uc29sZSIsImxvZ01lc3NhZ2UiLCJ3YXJuIiwiaW5mbyIsImxvZyIsImRlYnVnIiwidG9VcHBlckNhc2UiLCJjdXJyZW50TGV2ZWwiLCJjb25maWciLCJsb2dMZXZlbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTs7QUFFTyxNQUFNQSxNQUFNLEdBQUcsQ0FDcEIsT0FEb0IsRUFFcEIsTUFGb0IsRUFHcEIsTUFIb0IsRUFJcEIsT0FKb0IsRUFLcEIsTUFMb0IsQ0FBZjs7QUFRUCxNQUFNQyxVQUFVLEdBQUcsRUFBbkI7QUFDQSxNQUFNQyxVQUFVLEdBQUcsRUFBbkI7O0FBRUEsS0FBSyxJQUFJQyxLQUFLLEdBQUcsQ0FBakIsRUFBb0JBLEtBQUssR0FBR0gsTUFBTSxDQUFDSSxNQUFuQyxFQUEyQ0QsS0FBSyxFQUFoRCxFQUFvRDtBQUNsRCxRQUFNRSxLQUFLLEdBQUdMLE1BQU0sQ0FBQ0csS0FBRCxDQUFwQjtBQUNBRixFQUFBQSxVQUFVLENBQUNJLEtBQUQsQ0FBVixHQUFvQkYsS0FBcEI7QUFDQUQsRUFBQUEsVUFBVSxDQUFDQyxLQUFELENBQVYsR0FBb0JFLEtBQXBCO0FBQ0Q7O0FBRU0sTUFBTUMsTUFBTixDQUFhO0FBQ2xCLFNBQU9DLEtBQVAsQ0FBYUMsT0FBYixFQUE4QjtBQUM1QixRQUFJLENBQUMsS0FBS0MsU0FBTCxDQUFlLE9BQWYsQ0FBTCxFQUE4QjtBQUM5QkMsSUFBQUEsT0FBTyxDQUFDSCxLQUFSLENBQWMsS0FBS0ksVUFBTCxDQUFnQixPQUFoQixFQUF5QkgsT0FBekIsQ0FBZDtBQUNEOztBQUVELFNBQU9JLElBQVAsQ0FBWUosT0FBWixFQUE2QjtBQUMzQixRQUFJLENBQUMsS0FBS0MsU0FBTCxDQUFlLE1BQWYsQ0FBTCxFQUE2QjtBQUM3QkMsSUFBQUEsT0FBTyxDQUFDRSxJQUFSLENBQWEsS0FBS0QsVUFBTCxDQUFnQixNQUFoQixFQUF3QkgsT0FBeEIsQ0FBYjtBQUNEOztBQUVELFNBQU9LLElBQVAsQ0FBWUwsT0FBWixFQUE2QjtBQUMzQixRQUFJLENBQUMsS0FBS0MsU0FBTCxDQUFlLE1BQWYsQ0FBTCxFQUE2QjtBQUM3QkMsSUFBQUEsT0FBTyxDQUFDSSxHQUFSLENBQVksS0FBS0gsVUFBTCxDQUFnQixNQUFoQixFQUF3QkgsT0FBeEIsQ0FBWjtBQUNEOztBQUVELFNBQU9PLEtBQVAsQ0FBYVAsT0FBYixFQUE4QjtBQUM1QixRQUFJLENBQUMsS0FBS0MsU0FBTCxDQUFlLE9BQWYsQ0FBTCxFQUE4QjtBQUM5QkMsSUFBQUEsT0FBTyxDQUFDSSxHQUFSLENBQVksS0FBS0gsVUFBTCxDQUFnQixPQUFoQixFQUF5QkgsT0FBekIsQ0FBWjtBQUNEOztBQUVELFNBQU9HLFVBQVAsQ0FBa0JOLEtBQWxCLEVBQWlDRyxPQUFqQyxFQUFrRDtBQUNoRCxXQUFRLElBQUdILEtBQUssQ0FBQ1csV0FBTixFQUFvQixLQUFJUixPQUFRLEVBQTNDO0FBQ0Q7O0FBRUQsU0FBT0MsU0FBUCxDQUFpQkosS0FBakIsRUFBZ0M7QUFDOUIsVUFBTVksWUFBWSxHQUFHaEIsVUFBVSxDQUFDaUIsZUFBT0MsUUFBUixDQUEvQjtBQUNBLFdBQU9GLFlBQVksSUFBSWhCLFVBQVUsQ0FBQ0ksS0FBRCxDQUFqQztBQUNEOztBQTVCaUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb25maWcgfSBmcm9tICcuL2NvbmZpZydcblxuZXhwb3J0IGNvbnN0IGxldmVscyA9IFtcbiAgJ2RlYnVnJyxcbiAgJ2luZm8nLFxuICAnd2FybicsXG4gICdlcnJvcicsXG4gICdub25lJ1xuXVxuXG5jb25zdCBsZXZlbFRvSW50ID0ge31cbmNvbnN0IGludFRvTGV2ZWwgPSB7fVxuXG5mb3IgKGxldCBpbmRleCA9IDA7IGluZGV4IDwgbGV2ZWxzLmxlbmd0aDsgaW5kZXgrKykge1xuICBjb25zdCBsZXZlbCA9IGxldmVsc1tpbmRleF1cbiAgbGV2ZWxUb0ludFtsZXZlbF0gPSBpbmRleFxuICBpbnRUb0xldmVsW2luZGV4XSA9IGxldmVsXG59XG5cbmV4cG9ydCBjbGFzcyBMb2dnZXIge1xuICBzdGF0aWMgZXJyb3IobWVzc2FnZTogc3RyaW5nKSB7XG4gICAgaWYgKCF0aGlzLnNob3VsZExvZygnZXJyb3InKSkgcmV0dXJuXG4gICAgY29uc29sZS5lcnJvcih0aGlzLmxvZ01lc3NhZ2UoJ2Vycm9yJywgbWVzc2FnZSkpXG4gIH1cblxuICBzdGF0aWMgd2FybihtZXNzYWdlOiBzdHJpbmcpIHtcbiAgICBpZiAoIXRoaXMuc2hvdWxkTG9nKCd3YXJuJykpIHJldHVyblxuICAgIGNvbnNvbGUud2Fybih0aGlzLmxvZ01lc3NhZ2UoJ3dhcm4nLCBtZXNzYWdlKSlcbiAgfVxuXG4gIHN0YXRpYyBpbmZvKG1lc3NhZ2U6IHN0cmluZykge1xuICAgIGlmICghdGhpcy5zaG91bGRMb2coJ2luZm8nKSkgcmV0dXJuXG4gICAgY29uc29sZS5sb2codGhpcy5sb2dNZXNzYWdlKCdpbmZvJywgbWVzc2FnZSkpXG4gIH1cblxuICBzdGF0aWMgZGVidWcobWVzc2FnZTogc3RyaW5nKSB7XG4gICAgaWYgKCF0aGlzLnNob3VsZExvZygnZGVidWcnKSkgcmV0dXJuXG4gICAgY29uc29sZS5sb2codGhpcy5sb2dNZXNzYWdlKCdkZWJ1ZycsIG1lc3NhZ2UpKVxuICB9XG5cbiAgc3RhdGljIGxvZ01lc3NhZ2UobGV2ZWw6IHN0cmluZywgbWVzc2FnZTogc3RyaW5nKSB7XG4gICAgcmV0dXJuIGBbJHtsZXZlbC50b1VwcGVyQ2FzZSgpfV0gJHttZXNzYWdlfWBcbiAgfVxuXG4gIHN0YXRpYyBzaG91bGRMb2cobGV2ZWw6IHN0cmluZykge1xuICAgIGNvbnN0IGN1cnJlbnRMZXZlbCA9IGxldmVsVG9JbnRbY29uZmlnLmxvZ0xldmVsXVxuICAgIHJldHVybiBjdXJyZW50TGV2ZWwgPD0gbGV2ZWxUb0ludFtsZXZlbF1cbiAgfVxufVxuIl19