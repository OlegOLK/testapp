"use strict";

exports.__esModule = true;
exports.Github = void 0;

var _service = require("./service");

class Github extends _service.Service {
  static getBaseUrls() {
    const baseUrls = ['https://gist.github.com/', 'http://gist.github.com', 'gist.github.com'];
    return baseUrls;
  }

  static getProofUrl(proof) {
    const baseUrls = this.getBaseUrls();
    let proofUrl = proof.proof_url.toLowerCase();
    proofUrl = super.prefixScheme(proofUrl);

    for (let i = 0; i < baseUrls.length; i++) {
      const requiredPrefix = `${baseUrls[i]}${proof.identifier}`.toLowerCase();

      if (proofUrl.startsWith(requiredPrefix)) {
        const raw = proofUrl.endsWith('/') ? 'raw' : '/raw';
        return `${proofUrl}${raw}`;
      }
    }

    throw new Error(`Proof url ${proof.proof_url} is not valid for service ${proof.service}`);
  }

}

exports.Github = Github;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9wcm9maWxlcy9zZXJ2aWNlcy9naXRodWIuanMiXSwibmFtZXMiOlsiR2l0aHViIiwiU2VydmljZSIsImdldEJhc2VVcmxzIiwiYmFzZVVybHMiLCJnZXRQcm9vZlVybCIsInByb29mIiwicHJvb2ZVcmwiLCJwcm9vZl91cmwiLCJ0b0xvd2VyQ2FzZSIsInByZWZpeFNjaGVtZSIsImkiLCJsZW5ndGgiLCJyZXF1aXJlZFByZWZpeCIsImlkZW50aWZpZXIiLCJzdGFydHNXaXRoIiwicmF3IiwiZW5kc1dpdGgiLCJFcnJvciIsInNlcnZpY2UiXSwibWFwcGluZ3MiOiI7Ozs7O0FBQ0E7O0FBRUEsTUFBTUEsTUFBTixTQUFxQkMsZ0JBQXJCLENBQTZCO0FBQzNCLFNBQU9DLFdBQVAsR0FBcUI7QUFDbkIsVUFBTUMsUUFBUSxHQUFHLENBQUMsMEJBQUQsRUFBNkIsd0JBQTdCLEVBQXVELGlCQUF2RCxDQUFqQjtBQUNBLFdBQU9BLFFBQVA7QUFDRDs7QUFFRCxTQUFPQyxXQUFQLENBQW1CQyxLQUFuQixFQUFrQztBQUNoQyxVQUFNRixRQUFRLEdBQUcsS0FBS0QsV0FBTCxFQUFqQjtBQUNBLFFBQUlJLFFBQVEsR0FBR0QsS0FBSyxDQUFDRSxTQUFOLENBQWdCQyxXQUFoQixFQUFmO0FBRUFGLElBQUFBLFFBQVEsR0FBRyxNQUFNRyxZQUFOLENBQW1CSCxRQUFuQixDQUFYOztBQUVBLFNBQUssSUFBSUksQ0FBQyxHQUFHLENBQWIsRUFBZ0JBLENBQUMsR0FBR1AsUUFBUSxDQUFDUSxNQUE3QixFQUFxQ0QsQ0FBQyxFQUF0QyxFQUEwQztBQUN4QyxZQUFNRSxjQUFjLEdBQUksR0FBRVQsUUFBUSxDQUFDTyxDQUFELENBQUksR0FBRUwsS0FBSyxDQUFDUSxVQUFXLEVBQWxDLENBQW9DTCxXQUFwQyxFQUF2Qjs7QUFDQSxVQUFJRixRQUFRLENBQUNRLFVBQVQsQ0FBb0JGLGNBQXBCLENBQUosRUFBeUM7QUFDdkMsY0FBTUcsR0FBRyxHQUFHVCxRQUFRLENBQUNVLFFBQVQsQ0FBa0IsR0FBbEIsSUFBeUIsS0FBekIsR0FBaUMsTUFBN0M7QUFDQSxlQUFRLEdBQUVWLFFBQVMsR0FBRVMsR0FBSSxFQUF6QjtBQUNEO0FBQ0Y7O0FBQ0QsVUFBTSxJQUFJRSxLQUFKLENBQVcsYUFBWVosS0FBSyxDQUFDRSxTQUFVLDZCQUE0QkYsS0FBSyxDQUFDYSxPQUFRLEVBQWpGLENBQU47QUFDRDs7QUFwQjBCIiwic291cmNlc0NvbnRlbnQiOlsiLyogQGZsb3cgKi9cbmltcG9ydCB7IFNlcnZpY2UgfSBmcm9tICcuL3NlcnZpY2UnXG5cbmNsYXNzIEdpdGh1YiBleHRlbmRzIFNlcnZpY2Uge1xuICBzdGF0aWMgZ2V0QmFzZVVybHMoKSB7XG4gICAgY29uc3QgYmFzZVVybHMgPSBbJ2h0dHBzOi8vZ2lzdC5naXRodWIuY29tLycsICdodHRwOi8vZ2lzdC5naXRodWIuY29tJywgJ2dpc3QuZ2l0aHViLmNvbSddXG4gICAgcmV0dXJuIGJhc2VVcmxzXG4gIH1cblxuICBzdGF0aWMgZ2V0UHJvb2ZVcmwocHJvb2Y6IE9iamVjdCkge1xuICAgIGNvbnN0IGJhc2VVcmxzID0gdGhpcy5nZXRCYXNlVXJscygpXG4gICAgbGV0IHByb29mVXJsID0gcHJvb2YucHJvb2ZfdXJsLnRvTG93ZXJDYXNlKClcblxuICAgIHByb29mVXJsID0gc3VwZXIucHJlZml4U2NoZW1lKHByb29mVXJsKVxuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBiYXNlVXJscy5sZW5ndGg7IGkrKykge1xuICAgICAgY29uc3QgcmVxdWlyZWRQcmVmaXggPSBgJHtiYXNlVXJsc1tpXX0ke3Byb29mLmlkZW50aWZpZXJ9YC50b0xvd2VyQ2FzZSgpXG4gICAgICBpZiAocHJvb2ZVcmwuc3RhcnRzV2l0aChyZXF1aXJlZFByZWZpeCkpIHtcbiAgICAgICAgY29uc3QgcmF3ID0gcHJvb2ZVcmwuZW5kc1dpdGgoJy8nKSA/ICdyYXcnIDogJy9yYXcnXG4gICAgICAgIHJldHVybiBgJHtwcm9vZlVybH0ke3Jhd31gXG4gICAgICB9XG4gICAgfVxuICAgIHRocm93IG5ldyBFcnJvcihgUHJvb2YgdXJsICR7cHJvb2YucHJvb2ZfdXJsfSBpcyBub3QgdmFsaWQgZm9yIHNlcnZpY2UgJHtwcm9vZi5zZXJ2aWNlfWApXG4gIH1cbn1cblxuZXhwb3J0IHsgR2l0aHViIH1cbiJdfQ==