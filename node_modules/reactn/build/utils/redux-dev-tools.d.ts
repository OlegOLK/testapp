import { Action, compose, Store } from 'redux';
import { devToolsEnhancer, EnhancerOptions } from 'redux-devtools-extension/developmentOnly';
import { State } from '../../default';
import GlobalStateManager from '../global-state-manager';
export declare type DevToolAction<G extends {} = State> = DevToolReducerAction | DevToolStateChangeAction<G>;
interface DevToolReducerAction extends Action<string> {
    args: any[];
}
interface DevToolStateChangeAction<G extends {} = State> extends Action<'STATE_CHANGE'> {
    stateChange: Partial<G>;
}
export declare type ReduxEnhancedStore<G extends {} = State> = Store<G & any, DevToolAction<G>>;
export interface Window {
    __REDUX_DEVTOOLS_EXTENSION__?: typeof devToolsEnhancer;
    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__: (options: EnhancerOptions) => typeof compose;
}
export declare function createReduxEnhancedStore<G extends {} = State>(globalStateManager: GlobalStateManager<G>): null | ReduxEnhancedStore<G>;
export {};
