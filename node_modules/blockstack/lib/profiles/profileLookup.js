"use strict";

exports.__esModule = true;
exports.lookupProfile = lookupProfile;

var _profileZoneFiles = require("./profileZoneFiles");

var _config = require("../config");

/**
 * Look up a user profile by blockstack ID
 *
 * @param {string} username - The Blockstack ID of the profile to look up
 * @param {string} [zoneFileLookupURL=null] - The URL
 * to use for zonefile lookup. If falsey, lookupProfile will use the
 * blockstack.js getNameInfo function.
 * @returns {Promise} that resolves to a profile object
 */
function lookupProfile(username, zoneFileLookupURL = null) {
  if (!username) {
    return Promise.reject();
  }

  let lookupPromise;

  if (zoneFileLookupURL) {
    const url = `${zoneFileLookupURL.replace(/\/$/, '')}/${username}`;
    lookupPromise = fetch(url).then(response => response.json());
  } else {
    lookupPromise = _config.config.network.getNameInfo(username);
  }

  return lookupPromise.then(responseJSON => {
    if (responseJSON.hasOwnProperty('zonefile') && responseJSON.hasOwnProperty('address')) {
      return (0, _profileZoneFiles.resolveZoneFileToProfile)(responseJSON.zonefile, responseJSON.address);
    } else {
      throw new Error('Invalid zonefile lookup response: did not contain `address`' + ' or `zonefile` field');
    }
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9wcm9maWxlcy9wcm9maWxlTG9va3VwLmpzIl0sIm5hbWVzIjpbImxvb2t1cFByb2ZpbGUiLCJ1c2VybmFtZSIsInpvbmVGaWxlTG9va3VwVVJMIiwiUHJvbWlzZSIsInJlamVjdCIsImxvb2t1cFByb21pc2UiLCJ1cmwiLCJyZXBsYWNlIiwiZmV0Y2giLCJ0aGVuIiwicmVzcG9uc2UiLCJqc29uIiwiY29uZmlnIiwibmV0d29yayIsImdldE5hbWVJbmZvIiwicmVzcG9uc2VKU09OIiwiaGFzT3duUHJvcGVydHkiLCJ6b25lZmlsZSIsImFkZHJlc3MiLCJFcnJvciJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFDQTs7QUFDQTs7QUFFQTs7Ozs7Ozs7O0FBU08sU0FBU0EsYUFBVCxDQUF1QkMsUUFBdkIsRUFBeUNDLGlCQUEwQixHQUFHLElBQXRFLEVBQTRFO0FBQ2pGLE1BQUksQ0FBQ0QsUUFBTCxFQUFlO0FBQ2IsV0FBT0UsT0FBTyxDQUFDQyxNQUFSLEVBQVA7QUFDRDs7QUFDRCxNQUFJQyxhQUFKOztBQUNBLE1BQUlILGlCQUFKLEVBQXVCO0FBQ3JCLFVBQU1JLEdBQUcsR0FBSSxHQUFFSixpQkFBaUIsQ0FBQ0ssT0FBbEIsQ0FBMEIsS0FBMUIsRUFBaUMsRUFBakMsQ0FBcUMsSUFBR04sUUFBUyxFQUFoRTtBQUNBSSxJQUFBQSxhQUFhLEdBQUdHLEtBQUssQ0FBQ0YsR0FBRCxDQUFMLENBQ2JHLElBRGEsQ0FDUkMsUUFBUSxJQUFJQSxRQUFRLENBQUNDLElBQVQsRUFESixDQUFoQjtBQUVELEdBSkQsTUFJTztBQUNMTixJQUFBQSxhQUFhLEdBQUdPLGVBQU9DLE9BQVAsQ0FBZUMsV0FBZixDQUEyQmIsUUFBM0IsQ0FBaEI7QUFDRDs7QUFDRCxTQUFPSSxhQUFhLENBQ2pCSSxJQURJLENBQ0VNLFlBQUQsSUFBa0I7QUFDdEIsUUFBSUEsWUFBWSxDQUFDQyxjQUFiLENBQTRCLFVBQTVCLEtBQ0dELFlBQVksQ0FBQ0MsY0FBYixDQUE0QixTQUE1QixDQURQLEVBQytDO0FBQzdDLGFBQU8sZ0RBQXlCRCxZQUFZLENBQUNFLFFBQXRDLEVBQWdERixZQUFZLENBQUNHLE9BQTdELENBQVA7QUFDRCxLQUhELE1BR087QUFDTCxZQUFNLElBQUlDLEtBQUosQ0FBVSxnRUFDRSxzQkFEWixDQUFOO0FBRUQ7QUFDRixHQVRJLENBQVA7QUFVRCIsInNvdXJjZXNDb250ZW50IjpbIi8qIEBmbG93ICovXG5pbXBvcnQgeyByZXNvbHZlWm9uZUZpbGVUb1Byb2ZpbGUgfSBmcm9tICcuL3Byb2ZpbGVab25lRmlsZXMnXG5pbXBvcnQgeyBjb25maWcgfSBmcm9tICcuLi9jb25maWcnXG5cbi8qKlxuICogTG9vayB1cCBhIHVzZXIgcHJvZmlsZSBieSBibG9ja3N0YWNrIElEXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHVzZXJuYW1lIC0gVGhlIEJsb2Nrc3RhY2sgSUQgb2YgdGhlIHByb2ZpbGUgdG8gbG9vayB1cFxuICogQHBhcmFtIHtzdHJpbmd9IFt6b25lRmlsZUxvb2t1cFVSTD1udWxsXSAtIFRoZSBVUkxcbiAqIHRvIHVzZSBmb3Igem9uZWZpbGUgbG9va3VwLiBJZiBmYWxzZXksIGxvb2t1cFByb2ZpbGUgd2lsbCB1c2UgdGhlXG4gKiBibG9ja3N0YWNrLmpzIGdldE5hbWVJbmZvIGZ1bmN0aW9uLlxuICogQHJldHVybnMge1Byb21pc2V9IHRoYXQgcmVzb2x2ZXMgdG8gYSBwcm9maWxlIG9iamVjdFxuICovXG5leHBvcnQgZnVuY3Rpb24gbG9va3VwUHJvZmlsZSh1c2VybmFtZTogc3RyaW5nLCB6b25lRmlsZUxvb2t1cFVSTDogP3N0cmluZyA9IG51bGwpIHtcbiAgaWYgKCF1c2VybmFtZSkge1xuICAgIHJldHVybiBQcm9taXNlLnJlamVjdCgpXG4gIH1cbiAgbGV0IGxvb2t1cFByb21pc2VcbiAgaWYgKHpvbmVGaWxlTG9va3VwVVJMKSB7XG4gICAgY29uc3QgdXJsID0gYCR7em9uZUZpbGVMb29rdXBVUkwucmVwbGFjZSgvXFwvJC8sICcnKX0vJHt1c2VybmFtZX1gXG4gICAgbG9va3VwUHJvbWlzZSA9IGZldGNoKHVybClcbiAgICAgIC50aGVuKHJlc3BvbnNlID0+IHJlc3BvbnNlLmpzb24oKSlcbiAgfSBlbHNlIHtcbiAgICBsb29rdXBQcm9taXNlID0gY29uZmlnLm5ldHdvcmsuZ2V0TmFtZUluZm8odXNlcm5hbWUpXG4gIH1cbiAgcmV0dXJuIGxvb2t1cFByb21pc2VcbiAgICAudGhlbigocmVzcG9uc2VKU09OKSA9PiB7XG4gICAgICBpZiAocmVzcG9uc2VKU09OLmhhc093blByb3BlcnR5KCd6b25lZmlsZScpXG4gICAgICAgICAgJiYgcmVzcG9uc2VKU09OLmhhc093blByb3BlcnR5KCdhZGRyZXNzJykpIHtcbiAgICAgICAgcmV0dXJuIHJlc29sdmVab25lRmlsZVRvUHJvZmlsZShyZXNwb25zZUpTT04uem9uZWZpbGUsIHJlc3BvbnNlSlNPTi5hZGRyZXNzKVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIHpvbmVmaWxlIGxvb2t1cCByZXNwb25zZTogZGlkIG5vdCBjb250YWluIGBhZGRyZXNzYCdcbiAgICAgICAgICAgICAgICAgICAgICAgICsgJyBvciBgem9uZWZpbGVgIGZpZWxkJylcbiAgICAgIH1cbiAgICB9KVxufVxuIl19