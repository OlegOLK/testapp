"use strict";

exports.__esModule = true;
exports.Organization = void 0;

var _schemaInspector = _interopRequireDefault(require("schema-inspector"));

var _profileTokens = require("../profileTokens");

var _profile = require("../profile");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const schemaDefinition = {
  type: 'object',
  properties: {
    '@context': {
      type: 'string',
      optional: true
    },
    '@type': {
      type: 'string'
    },
    '@id': {
      type: 'string',
      optional: true
    }
  }
};

class Organization extends _profile.Profile {
  constructor(profile = {}) {
    super(profile);
    this._profile = Object.assign({}, {
      '@type': 'Organization'
    }, this._profile);
  }

  static validateSchema(profile, strict = false) {
    schemaDefinition.strict = strict;
    return _schemaInspector.default.validate(schemaDefinition, profile);
  }

  static fromToken(token, publicKeyOrAddress = null) {
    const profile = (0, _profileTokens.extractProfile)(token, publicKeyOrAddress);
    return new Organization(profile);
  }

}

exports.Organization = Organization;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9wcm9maWxlcy9wcm9maWxlU2NoZW1hcy9vcmdhbml6YXRpb24uanMiXSwibmFtZXMiOlsic2NoZW1hRGVmaW5pdGlvbiIsInR5cGUiLCJwcm9wZXJ0aWVzIiwib3B0aW9uYWwiLCJPcmdhbml6YXRpb24iLCJQcm9maWxlIiwiY29uc3RydWN0b3IiLCJwcm9maWxlIiwiX3Byb2ZpbGUiLCJPYmplY3QiLCJhc3NpZ24iLCJ2YWxpZGF0ZVNjaGVtYSIsInN0cmljdCIsImluc3BlY3RvciIsInZhbGlkYXRlIiwiZnJvbVRva2VuIiwidG9rZW4iLCJwdWJsaWNLZXlPckFkZHJlc3MiXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7O0FBRUE7O0FBQ0E7Ozs7QUFFQSxNQUFNQSxnQkFBZ0IsR0FBRztBQUN2QkMsRUFBQUEsSUFBSSxFQUFFLFFBRGlCO0FBRXZCQyxFQUFBQSxVQUFVLEVBQUU7QUFDVixnQkFBWTtBQUFFRCxNQUFBQSxJQUFJLEVBQUUsUUFBUjtBQUFrQkUsTUFBQUEsUUFBUSxFQUFFO0FBQTVCLEtBREY7QUFFVixhQUFTO0FBQUVGLE1BQUFBLElBQUksRUFBRTtBQUFSLEtBRkM7QUFHVixXQUFPO0FBQUVBLE1BQUFBLElBQUksRUFBRSxRQUFSO0FBQWtCRSxNQUFBQSxRQUFRLEVBQUU7QUFBNUI7QUFIRztBQUZXLENBQXpCOztBQVNPLE1BQU1DLFlBQU4sU0FBMkJDLGdCQUEzQixDQUFtQztBQUN4Q0MsRUFBQUEsV0FBVyxDQUFDQyxPQUFPLEdBQUcsRUFBWCxFQUFlO0FBQ3hCLFVBQU1BLE9BQU47QUFDQSxTQUFLQyxRQUFMLEdBQWdCQyxNQUFNLENBQUNDLE1BQVAsQ0FBYyxFQUFkLEVBQWtCO0FBQ2hDLGVBQVM7QUFEdUIsS0FBbEIsRUFFYixLQUFLRixRQUZRLENBQWhCO0FBR0Q7O0FBRUQsU0FBT0csY0FBUCxDQUFzQkosT0FBdEIsRUFBK0JLLE1BQU0sR0FBRyxLQUF4QyxFQUErQztBQUM3Q1osSUFBQUEsZ0JBQWdCLENBQUNZLE1BQWpCLEdBQTBCQSxNQUExQjtBQUNBLFdBQU9DLHlCQUFVQyxRQUFWLENBQW1CZCxnQkFBbkIsRUFBcUNPLE9BQXJDLENBQVA7QUFDRDs7QUFFRCxTQUFPUSxTQUFQLENBQWlCQyxLQUFqQixFQUF3QkMsa0JBQWtCLEdBQUcsSUFBN0MsRUFBbUQ7QUFDakQsVUFBTVYsT0FBTyxHQUFHLG1DQUFlUyxLQUFmLEVBQXNCQyxrQkFBdEIsQ0FBaEI7QUFDQSxXQUFPLElBQUliLFlBQUosQ0FBaUJHLE9BQWpCLENBQVA7QUFDRDs7QUFoQnVDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGluc3BlY3RvciBmcm9tICdzY2hlbWEtaW5zcGVjdG9yJ1xuXG5pbXBvcnQgeyBleHRyYWN0UHJvZmlsZSB9IGZyb20gJy4uL3Byb2ZpbGVUb2tlbnMnXG5pbXBvcnQgeyBQcm9maWxlIH0gZnJvbSAnLi4vcHJvZmlsZSdcblxuY29uc3Qgc2NoZW1hRGVmaW5pdGlvbiA9IHtcbiAgdHlwZTogJ29iamVjdCcsXG4gIHByb3BlcnRpZXM6IHtcbiAgICAnQGNvbnRleHQnOiB7IHR5cGU6ICdzdHJpbmcnLCBvcHRpb25hbDogdHJ1ZSB9LFxuICAgICdAdHlwZSc6IHsgdHlwZTogJ3N0cmluZycgfSxcbiAgICAnQGlkJzogeyB0eXBlOiAnc3RyaW5nJywgb3B0aW9uYWw6IHRydWUgfVxuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBPcmdhbml6YXRpb24gZXh0ZW5kcyBQcm9maWxlIHtcbiAgY29uc3RydWN0b3IocHJvZmlsZSA9IHt9KSB7XG4gICAgc3VwZXIocHJvZmlsZSlcbiAgICB0aGlzLl9wcm9maWxlID0gT2JqZWN0LmFzc2lnbih7fSwge1xuICAgICAgJ0B0eXBlJzogJ09yZ2FuaXphdGlvbidcbiAgICB9LCB0aGlzLl9wcm9maWxlKVxuICB9XG5cbiAgc3RhdGljIHZhbGlkYXRlU2NoZW1hKHByb2ZpbGUsIHN0cmljdCA9IGZhbHNlKSB7XG4gICAgc2NoZW1hRGVmaW5pdGlvbi5zdHJpY3QgPSBzdHJpY3RcbiAgICByZXR1cm4gaW5zcGVjdG9yLnZhbGlkYXRlKHNjaGVtYURlZmluaXRpb24sIHByb2ZpbGUpXG4gIH1cblxuICBzdGF0aWMgZnJvbVRva2VuKHRva2VuLCBwdWJsaWNLZXlPckFkZHJlc3MgPSBudWxsKSB7XG4gICAgY29uc3QgcHJvZmlsZSA9IGV4dHJhY3RQcm9maWxlKHRva2VuLCBwdWJsaWNLZXlPckFkZHJlc3MpXG4gICAgcmV0dXJuIG5ldyBPcmdhbml6YXRpb24ocHJvZmlsZSlcbiAgfVxufVxuIl19