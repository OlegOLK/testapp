{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:\\\\Repository\\\\testapp\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Repository\\\\testapp\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"C:\\\\Repository\\\\testapp\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"C:\\\\Repository\\\\testapp\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\n\nvar _get = require(\"C:\\\\Repository\\\\testapp\\\\node_modules\\\\@babel\\\\runtime/helpers/get\");\n\nvar _inherits = require(\"C:\\\\Repository\\\\testapp\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nexports.__esModule = true;\nexports.HackerNews = void 0;\n\nvar _cheerio = _interopRequireDefault(require(\"cheerio\"));\n\nvar _service = require(\"./service\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar HackerNews =\n/*#__PURE__*/\nfunction (_service$Service) {\n  _inherits(HackerNews, _service$Service);\n\n  function HackerNews() {\n    _classCallCheck(this, HackerNews);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(HackerNews).apply(this, arguments));\n  }\n\n  _createClass(HackerNews, null, [{\n    key: \"getBaseUrls\",\n    value: function getBaseUrls() {\n      var baseUrls = ['https://news.ycombinator.com/user?id=', 'http://news.ycombinator.com/user?id=', 'news.ycombinator.com/user?id='];\n      return baseUrls;\n    }\n  }, {\n    key: \"getProofUrl\",\n    value: function getProofUrl(proof) {\n      var baseUrls = this.getBaseUrls();\n\n      var proofUrl = _get(_getPrototypeOf(HackerNews), \"prefixScheme\", this).call(this, proof.proof_url);\n\n      for (var i = 0; i < baseUrls.length; i++) {\n        if (proofUrl === \"\".concat(baseUrls[i]).concat(proof.identifier)) {\n          return proofUrl;\n        }\n      }\n\n      throw new Error(\"Proof url \".concat(proof.proof_url, \" is not valid for service \").concat(proof.service));\n    }\n  }, {\n    key: \"getProofStatement\",\n    value: function getProofStatement(searchText) {\n      var $ = _cheerio.default.load(searchText);\n\n      var tables = $('#hnmain').children().find('table');\n      var statement = '';\n\n      if (tables.length > 0) {\n        tables.each(function (tableIndex, table) {\n          var rows = $(table).find('tr');\n\n          if (rows.length > 0) {\n            rows.each(function (idx, row) {\n              var heading = $(row).find('td').first().text().trim();\n\n              if (heading === 'about:') {\n                statement = $(row).find('td').last().text().trim();\n              }\n            });\n          }\n        });\n      }\n\n      return statement;\n    }\n  }]);\n\n  return HackerNews;\n}(_service.Service);\n\nexports.HackerNews = HackerNews;","map":null,"metadata":{},"sourceType":"script"}