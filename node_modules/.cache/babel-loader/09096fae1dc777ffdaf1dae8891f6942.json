{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:\\\\Repository\\\\testapp\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Repository\\\\testapp\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nexports.__esModule = true;\nexports.SessionData = void 0;\n\nvar _errors = require(\"../errors\");\n\nvar SESSION_VERSION = '1.0.0';\n\nvar SessionData =\n/*#__PURE__*/\nfunction () {\n  // required after sign in\n  // required after sign in\n  // required after sign in\n  // using this in place of\n  // window.localStorage.setItem(BLOCKSTACK_STORAGE_LABEL, JSON.stringify(userData))\n  function SessionData(options) {\n    _classCallCheck(this, SessionData);\n\n    this.version = SESSION_VERSION;\n    this.appPrivateKey = options.appPrivateKey;\n    this.identityAddress = options.identityAddress;\n    this.username = options.username;\n    this.coreNode = options.coreNode;\n    this.hubUrl = options.hubUrl;\n    this.userData = options.userData;\n    this.transitKey = options.transitKey; // initializing Gaia connection requires a network request\n    // so we'll defer it until the first time it's needed\n\n    this.gaiaHubConfig = null;\n  }\n\n  _createClass(SessionData, [{\n    key: \"getGaiaHubConfig\",\n    value: function getGaiaHubConfig() {\n      return this.gaiaHubConfig;\n    }\n  }, {\n    key: \"setGaiaHubConfig\",\n    value: function setGaiaHubConfig(config) {\n      this.gaiaHubConfig = config;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return JSON.stringify(this);\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      if (json.version !== SESSION_VERSION) {\n        throw new _errors.InvalidStateError(\"JSON data version \".concat(json.version, \" not supported by SessionData\"));\n      }\n\n      var options = {\n        appPrivateKey: json.appPrivateKey,\n        identityAddress: json.identityAddress,\n        username: json.username,\n        coreNode: json.coreNode,\n        hubUrl: json.hubUrl,\n        userData: json.userData,\n        transitKey: json.transitKey\n      };\n      return new SessionData(options);\n    }\n  }]);\n\n  return SessionData;\n}();\n\nexports.SessionData = SessionData;","map":null,"metadata":{},"sourceType":"script"}