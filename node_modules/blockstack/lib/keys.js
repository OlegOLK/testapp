"use strict";

exports.__esModule = true;
exports.getEntropy = getEntropy;
exports.makeECPrivateKey = makeECPrivateKey;
exports.publicKeyToAddress = publicKeyToAddress;
exports.getPublicKeyFromPrivate = getPublicKeyFromPrivate;

var _crypto = require("crypto");

var _bitcoinjsLib = require("bitcoinjs-lib");

function getEntropy(numberOfBytes) {
  if (!numberOfBytes) {
    numberOfBytes = 32;
  }

  return (0, _crypto.randomBytes)(numberOfBytes);
}

function makeECPrivateKey() {
  const keyPair = new _bitcoinjsLib.ECPair.makeRandom({
    rng: getEntropy
  });
  return keyPair.privateKey.toString('hex');
}

function publicKeyToAddress(publicKey) {
  const publicKeyBuffer = Buffer.from(publicKey, 'hex');

  const publicKeyHash160 = _bitcoinjsLib.crypto.hash160(publicKeyBuffer);

  const address = _bitcoinjsLib.address.toBase58Check(publicKeyHash160, 0x00);

  return address;
}

function getPublicKeyFromPrivate(privateKey) {
  const keyPair = _bitcoinjsLib.ECPair.fromPrivateKey(Buffer.from(privateKey, 'hex'));

  return keyPair.publicKey.toString('hex');
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9rZXlzLmpzIl0sIm5hbWVzIjpbImdldEVudHJvcHkiLCJudW1iZXJPZkJ5dGVzIiwibWFrZUVDUHJpdmF0ZUtleSIsImtleVBhaXIiLCJFQ1BhaXIiLCJtYWtlUmFuZG9tIiwicm5nIiwicHJpdmF0ZUtleSIsInRvU3RyaW5nIiwicHVibGljS2V5VG9BZGRyZXNzIiwicHVibGljS2V5IiwicHVibGljS2V5QnVmZmVyIiwiQnVmZmVyIiwiZnJvbSIsInB1YmxpY0tleUhhc2gxNjAiLCJiY3J5cHRvIiwiaGFzaDE2MCIsImFkZHJlc3MiLCJiYWRkcmVzcyIsInRvQmFzZTU4Q2hlY2siLCJnZXRQdWJsaWNLZXlGcm9tUHJpdmF0ZSIsImZyb21Qcml2YXRlS2V5Il0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUNBOztBQUNBOztBQUVPLFNBQVNBLFVBQVQsQ0FBb0JDLGFBQXBCLEVBQTJDO0FBQ2hELE1BQUksQ0FBQ0EsYUFBTCxFQUFvQjtBQUNsQkEsSUFBQUEsYUFBYSxHQUFHLEVBQWhCO0FBQ0Q7O0FBQ0QsU0FBTyx5QkFBWUEsYUFBWixDQUFQO0FBQ0Q7O0FBRU0sU0FBU0MsZ0JBQVQsR0FBNEI7QUFDakMsUUFBTUMsT0FBTyxHQUFHLElBQUlDLHFCQUFPQyxVQUFYLENBQXNCO0FBQUVDLElBQUFBLEdBQUcsRUFBRU47QUFBUCxHQUF0QixDQUFoQjtBQUNBLFNBQU9HLE9BQU8sQ0FBQ0ksVUFBUixDQUFtQkMsUUFBbkIsQ0FBNEIsS0FBNUIsQ0FBUDtBQUNEOztBQUVNLFNBQVNDLGtCQUFULENBQTRCQyxTQUE1QixFQUErQztBQUNwRCxRQUFNQyxlQUFlLEdBQUdDLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZSCxTQUFaLEVBQXVCLEtBQXZCLENBQXhCOztBQUNBLFFBQU1JLGdCQUFnQixHQUFHQyxxQkFBUUMsT0FBUixDQUFnQkwsZUFBaEIsQ0FBekI7O0FBQ0EsUUFBTU0sT0FBTyxHQUFHQyxzQkFBU0MsYUFBVCxDQUF1QkwsZ0JBQXZCLEVBQXlDLElBQXpDLENBQWhCOztBQUNBLFNBQU9HLE9BQVA7QUFDRDs7QUFFTSxTQUFTRyx1QkFBVCxDQUFpQ2IsVUFBakMsRUFBcUQ7QUFDMUQsUUFBTUosT0FBTyxHQUFHQyxxQkFBT2lCLGNBQVAsQ0FBc0JULE1BQU0sQ0FBQ0MsSUFBUCxDQUFZTixVQUFaLEVBQXdCLEtBQXhCLENBQXRCLENBQWhCOztBQUNBLFNBQU9KLE9BQU8sQ0FBQ08sU0FBUixDQUFrQkYsUUFBbEIsQ0FBMkIsS0FBM0IsQ0FBUDtBQUNEIiwic291cmNlc0NvbnRlbnQiOlsiLyogQGZsb3cgKi9cbmltcG9ydCB7IHJhbmRvbUJ5dGVzIH0gZnJvbSAnY3J5cHRvJ1xuaW1wb3J0IHsgRUNQYWlyLCBhZGRyZXNzIGFzIGJhZGRyZXNzLCBjcnlwdG8gYXMgYmNyeXB0byB9IGZyb20gJ2JpdGNvaW5qcy1saWInXG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRFbnRyb3B5KG51bWJlck9mQnl0ZXM6IG51bWJlcikge1xuICBpZiAoIW51bWJlck9mQnl0ZXMpIHtcbiAgICBudW1iZXJPZkJ5dGVzID0gMzJcbiAgfVxuICByZXR1cm4gcmFuZG9tQnl0ZXMobnVtYmVyT2ZCeXRlcylcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG1ha2VFQ1ByaXZhdGVLZXkoKSB7XG4gIGNvbnN0IGtleVBhaXIgPSBuZXcgRUNQYWlyLm1ha2VSYW5kb20oeyBybmc6IGdldEVudHJvcHkgfSlcbiAgcmV0dXJuIGtleVBhaXIucHJpdmF0ZUtleS50b1N0cmluZygnaGV4Jylcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHB1YmxpY0tleVRvQWRkcmVzcyhwdWJsaWNLZXk6IHN0cmluZykge1xuICBjb25zdCBwdWJsaWNLZXlCdWZmZXIgPSBCdWZmZXIuZnJvbShwdWJsaWNLZXksICdoZXgnKVxuICBjb25zdCBwdWJsaWNLZXlIYXNoMTYwID0gYmNyeXB0by5oYXNoMTYwKHB1YmxpY0tleUJ1ZmZlcilcbiAgY29uc3QgYWRkcmVzcyA9IGJhZGRyZXNzLnRvQmFzZTU4Q2hlY2socHVibGljS2V5SGFzaDE2MCwgMHgwMClcbiAgcmV0dXJuIGFkZHJlc3Ncbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldFB1YmxpY0tleUZyb21Qcml2YXRlKHByaXZhdGVLZXk6IHN0cmluZykge1xuICBjb25zdCBrZXlQYWlyID0gRUNQYWlyLmZyb21Qcml2YXRlS2V5KEJ1ZmZlci5mcm9tKHByaXZhdGVLZXksICdoZXgnKSlcbiAgcmV0dXJuIGtleVBhaXIucHVibGljS2V5LnRvU3RyaW5nKCdoZXgnKVxufVxuIl19