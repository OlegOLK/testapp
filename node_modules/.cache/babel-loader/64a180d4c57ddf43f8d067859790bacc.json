{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _wolfy87Eventemitter = _interopRequireDefault(require(\"wolfy87-eventemitter\"));\n\nvar _config = require(\"./config\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar EVENT_NAME = 'RADIKS_STREAM_MESSAGE';\n\nvar Streamer =\n/*#__PURE__*/\nfunction () {\n  function Streamer() {\n    _classCallCheck(this, Streamer);\n  }\n\n  _createClass(Streamer, null, [{\n    key: \"init\",\n    value: function init() {\n      var _this = this;\n\n      if (this.initialized) {\n        return this.socket;\n      }\n\n      var _ref = (0, _config.getConfig)(),\n          apiServer = _ref.apiServer;\n\n      var protocol = document.location.protocol === 'http:' ? 'ws' : 'wss';\n      var socket = new WebSocket(\"\".concat(protocol, \"://\").concat(apiServer.replace(/^https?:\\/\\//, ''), \"/radiks/stream/\"));\n      this.emitter = new _wolfy87Eventemitter.default();\n      this.socket = socket;\n      this.initialized = true;\n\n      socket.onmessage = function (event) {\n        _this.emitter.emit(EVENT_NAME, [event]);\n      };\n\n      return socket;\n    }\n  }, {\n    key: \"addListener\",\n    value: function addListener(callback) {\n      this.init();\n      this.emitter.addListener(EVENT_NAME, callback);\n    }\n  }, {\n    key: \"removeListener\",\n    value: function removeListener(callback) {\n      this.init();\n      this.emitter.removeListener(EVENT_NAME, callback);\n    }\n  }]);\n\n  return Streamer;\n}();\n\nexports.default = Streamer;\n\n_defineProperty(Streamer, \"initialized\", void 0);\n\n_defineProperty(Streamer, \"socket\", void 0);\n\n_defineProperty(Streamer, \"emitter\", void 0);","map":null,"metadata":{},"sourceType":"script"}