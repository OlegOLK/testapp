{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _encryption = require(\"blockstack/lib/encryption\");\n\nvar _config = require(\"./config\");\n\nvar _api = require(\"./api\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nvar Central =\n/*#__PURE__*/\nfunction () {\n  function Central() {\n    _classCallCheck(this, Central);\n  }\n\n  _createClass(Central, null, [{\n    key: \"save\",\n    value: function save(key, value) {\n      var _this$makeSignature = this.makeSignature(key),\n          username = _this$makeSignature.username,\n          signature = _this$makeSignature.signature;\n\n      return (0, _api.saveCentral)({\n        username: username,\n        key: key,\n        value: value,\n        signature: signature\n      });\n    }\n  }, {\n    key: \"get\",\n    value: function get(key) {\n      var _this$makeSignature2 = this.makeSignature(key),\n          username = _this$makeSignature2.username,\n          signature = _this$makeSignature2.signature;\n\n      return (0, _api.fetchCentral)(key, username, signature);\n    }\n  }, {\n    key: \"makeSignature\",\n    value: function makeSignature(key) {\n      var _ref = (0, _config.getConfig)(),\n          userSession = _ref.userSession;\n\n      var _userSession$loadUser = userSession.loadUserData(),\n          appPrivateKey = _userSession$loadUser.appPrivateKey,\n          username = _userSession$loadUser.username;\n\n      var message = \"\".concat(username, \"-\").concat(key);\n\n      var _ref2 = (0, _encryption.signECDSA)(appPrivateKey, message),\n          signature = _ref2.signature;\n\n      return {\n        username: username,\n        signature: signature\n      };\n    }\n  }]);\n\n  return Central;\n}();\n\nvar _default = Central;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}